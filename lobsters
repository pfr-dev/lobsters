#!/usr/bin/env bash

## A CLI for https://lobste.rs
## Requirements: awk, curl, jq, sed, xargs, w3m, bat
## Created by -- Phate6660 (phate)
## Forked and modified by pfr and still very much a WIP

# keep it sane
set -eu -o pipefail

# s/newest/active
json="$(curl -sSL https://lobste.rs/active.json)"

# TODO: Add the ability to go to next page
# Preferably using the input 'next' instead of explicitly
# selecting a page number. This will require some hacking.
#page2="$(curl -sSL https://lobste.rs/active/page/2.json)"
#page3="$(curl -sSL https://lobste.rs/active/page/3.json)"
#page4="$(curl -sSL https://lobste.rs/active/page/4.json)"

# TODO: Add the ability to switch between newest/active/recent


sed_filter="sed -e 's/^\"//' -e 's/\"$//'"

titles="$(jq '.[].title' <<< "$json")"
titles="$(eval "$sed_filter" <<< "$titles")"

article_urls="$(jq '.[].url' <<< "$json")"
article_urls="$(eval "$sed_filter" <<< "$article_urls")"

comment_urls="$(jq '.[].comments_url' <<< "$json")"
comment_urls="$(eval "$sed_filter" <<< "$comment_urls")"

comment_count="$(jq '.[].comment_count' <<< "$json")"
comment_count="$(eval "$sed_filter" <<< "$comment_count")"

article_urls_space_delimited="$(xargs <<< "$article_urls")"
comment_urls_space_delimited="$(xargs <<< "$comment_urls")"
comment_count_space_delimited="$(xargs <<< "$comment_count")"

clear

read -a article_url_array <<< "$article_urls_space_delimited"
read -a comment_url_array <<< "$comment_urls_space_delimited"
read -a comment_count_array <<< "$comment_count_space_delimited"

awk '{print NR-1 " " $0}' <<< "$titles"

echo
read -p "Select article: " article
# TODO:
#read -p "Select article:
#Next Page
#Show Newest
#Show Recent
#Show Active
#>> " article, next, newest, recent, active
echo
read -p "What would you like to do:

1) Display URLs
2) Open article in browser
3) Read article in terminal
4) Read comments in terminal (${comment_count_array[$article]} comments)

>> " action

if [ "$action" = "1" ]; then
    echo -e "\nArticle: ${article_url_array[$article]}
Comments: ${comment_url_array[$article]} (${comment_count_array[$article]} comments)"
elif [ "$action" = "2" ]; then
    if [ -n "$BROWSER" ]; then
        "$BROWSER" "${article_url_array[$article]}"
    elif type -P 'xdg-open'; then
        xdg-open "${article_url_array[$article]}"
    else
        read -p "Please choose your browser (e.g. firefox) -- you may need to use the full path (e.g. /opt/firefox/firefox): " browser
        if [[ "$browser" == *"firefox"* ]] || [[ "$browser" == *"chrome"* ]] || \
            [[ "$browser" == *"opera"* ]] || [[ "$browser" == *"brave"* ]]; then
            eval "$browser --new-tab ${article_url_array[$article]}"
        else
            eval "$browser ${article_url_array[$article]}"
        fi
    fi
fi

# Add the ability to view articles and comments in terminal using w3m
if [ "$action" = "3" ]; then
    eval "w3m -dump ${article_url_array[$article]} | bat -p"
elif [ "$action" = "4" ]; then
    eval "w3m -dump ${comment_url_array[$article]} | bat -p"
fi
